//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace svcS2PI
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="ns:http://www.medikredit.co.za/S2PI", ConfigurationName="svcS2PI.S2PIPortType")]
    public interface S2PIPortType
    {
        
        // CODEGEN: Generating message contract since the operation submit-claim is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        svcS2PI.submitclaimResponse1 submitclaim(svcS2PI.submitclaimRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<svcS2PI.submitclaimResponse1> submitclaimAsync(svcS2PI.submitclaimRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.medikredit.co.za/S2PI")]
    public partial class submitclaim : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string requestField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public string request
        {
            get
            {
                return this.requestField;
            }
            set
            {
                this.requestField = value;
                this.RaisePropertyChanged("request");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.medikredit.co.za/S2PI")]
    public partial class submitclaimResponse : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private string replyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public string reply
        {
            get
            {
                return this.replyField;
            }
            set
            {
                this.replyField = value;
                this.RaisePropertyChanged("reply");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class submitclaimRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="submit-claim", Namespace="http://www.medikredit.co.za/S2PI", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("submit-claim")]
        public svcS2PI.submitclaim submitclaim;
        
        public submitclaimRequest()
        {
        }
        
        public submitclaimRequest(svcS2PI.submitclaim submitclaim)
        {
            this.submitclaim = submitclaim;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class submitclaimResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="submit-claimResponse", Namespace="http://www.medikredit.co.za/S2PI", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("submit-claimResponse")]
        public svcS2PI.submitclaimResponse submitclaimResponse;
        
        public submitclaimResponse1()
        {
        }
        
        public submitclaimResponse1(svcS2PI.submitclaimResponse submitclaimResponse)
        {
            this.submitclaimResponse = submitclaimResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface S2PIPortTypeChannel : svcS2PI.S2PIPortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class S2PIPortTypeClient : System.ServiceModel.ClientBase<svcS2PI.S2PIPortType>, svcS2PI.S2PIPortType
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public S2PIPortTypeClient() : 
                base(S2PIPortTypeClient.GetDefaultBinding(), S2PIPortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.S2PI.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public S2PIPortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(S2PIPortTypeClient.GetBindingForEndpoint(endpointConfiguration), S2PIPortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public S2PIPortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(S2PIPortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public S2PIPortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(S2PIPortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public S2PIPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        svcS2PI.submitclaimResponse1 svcS2PI.S2PIPortType.submitclaim(svcS2PI.submitclaimRequest request)
        {
            return base.Channel.submitclaim(request);
        }
        
        public svcS2PI.submitclaimResponse submitclaim(svcS2PI.submitclaim submitclaim1)
        {
            svcS2PI.submitclaimRequest inValue = new svcS2PI.submitclaimRequest();
            inValue.submitclaim = submitclaim1;
            svcS2PI.submitclaimResponse1 retVal = ((svcS2PI.S2PIPortType)(this)).submitclaim(inValue);
            return retVal.submitclaimResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<svcS2PI.submitclaimResponse1> svcS2PI.S2PIPortType.submitclaimAsync(svcS2PI.submitclaimRequest request)
        {
            return base.Channel.submitclaimAsync(request);
        }
        
        public System.Threading.Tasks.Task<svcS2PI.submitclaimResponse1> submitclaimAsync(svcS2PI.submitclaim submitclaim)
        {
            svcS2PI.submitclaimRequest inValue = new svcS2PI.submitclaimRequest();
            inValue.submitclaim = submitclaim;
            return ((svcS2PI.S2PIPortType)(this)).submitclaimAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.S2PI))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.S2PI))
            {
                return new System.ServiceModel.EndpointAddress("https://services.medikredit.co.za:4436/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return S2PIPortTypeClient.GetBindingForEndpoint(EndpointConfiguration.S2PI);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return S2PIPortTypeClient.GetEndpointAddress(EndpointConfiguration.S2PI);
        }
        
        public enum EndpointConfiguration
        {
            
            S2PI,
        }
    }
}
